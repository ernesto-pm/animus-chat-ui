// This file is auto-generated by @hey-api/openapi-ts

export type AnimusBetaPersona = {
    id: string;
    name: string;
    details: (string | null);
    associated_user_id: (string | null);
};

export type AnimusBetaUser = {
    id: string;
    name: (string | null);
    username: (string | null);
    email: string;
    email_verified: (string | null);
    password: (string | null);
    created_at: string;
    updated_at: (string | null);
    is_admin: boolean;
};

export type CreatePersonasBody = {
    name: string;
    details: (string | null);
    associatedUserId: string;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type LoginBody = {
    email: string;
    password: string;
};

export type SignupUser = {
    name: string;
    username: string;
    email: string;
    plainTextPassword: string;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type LoginUsersLoginPostData = {
    body: LoginBody;
};

export type LoginUsersLoginPostResponse = (AnimusBetaUser);

export type LoginUsersLoginPostError = (HTTPValidationError);

export type SignupNormieUserUsersSignupNormiePostData = {
    body: SignupUser;
};

export type SignupNormieUserUsersSignupNormiePostResponse = (AnimusBetaUser);

export type SignupNormieUserUsersSignupNormiePostError = (HTTPValidationError);

export type SignupAdminUserUsersSignupAdminPostData = {
    body: SignupUser;
};

export type SignupAdminUserUsersSignupAdminPostResponse = (AnimusBetaUser);

export type SignupAdminUserUsersSignupAdminPostError = (HTTPValidationError);

export type GetAllUsersUsersGetResponse = (Array<AnimusBetaUser>);

export type GetAllUsersUsersGetError = unknown;

export type GetUserByEmailUsersEmailEmailGetData = {
    path: {
        email: string;
    };
};

export type GetUserByEmailUsersEmailEmailGetResponse = ((AnimusBetaUser | null));

export type GetUserByEmailUsersEmailEmailGetError = (HTTPValidationError);

export type GetUserByIdUsersEmailIdGetData = {
    path: {
        id: string;
    };
};

export type GetUserByIdUsersEmailIdGetResponse = ((AnimusBetaUser | null));

export type GetUserByIdUsersEmailIdGetError = (HTTPValidationError);

export type CreatePersonaPersonasPostData = {
    body: CreatePersonasBody;
};

export type CreatePersonaPersonasPostResponse = (AnimusBetaPersona);

export type CreatePersonaPersonasPostError = (HTTPValidationError);