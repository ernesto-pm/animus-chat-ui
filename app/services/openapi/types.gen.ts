// This file is auto-generated by @hey-api/openapi-ts

export type AnimusBetaCharacter = {
    id: string;
    name: string;
    display_name: string;
    details: string;
    associated_user_id: (string | null);
    is_public: (boolean | null);
    additional_attributes: (unknown | null);
};

export type AnimusBetaChat = {
    id: string;
    name: string;
    state: (string | null);
    character_id: (string | null);
    persona_id: (string | null);
    system_message_id: (string | null);
    scenario_id: (string | null);
    associated_user_id: (string | null);
    created_at: string;
    updated_at: (string | null);
};

export type AnimusBetaChatGenerationSetting = {
    id: string;
    model_version: string;
    chat_prediction_count: number;
    temperature: (string | null);
    top_p: (string | null);
    top_k: (number | null);
    max_tokens: (number | null);
    repeat_penalty: (string | null);
    associated_chat_id: string;
    created_at: string;
    updated_at: (string | null);
};

export type AnimusBetaChatUiSetting = {
    id: string;
    display_style: ChatDisplayStyle;
    show_names: (boolean | null);
    associated_chat_id: string;
    created_at: string;
    updated_at: (string | null);
};

export type AnimusBetaPersona = {
    id: string;
    name: string;
    details: (string | null);
    associated_user_id: string;
    is_public: (boolean | null);
};

export type AnimusBetaScenario = {
    id: string;
    name: string;
    content: (string | null);
    is_public: (boolean | null);
    associated_user_id: (string | null);
};

export type AnimusBetaSystemMessage = {
    id: string;
    name: string;
    content: (string | null);
    is_public: (boolean | null);
    associated_user_id: string;
};

export type AnimusBetaUser = {
    id: string;
    name: (string | null);
    username: (string | null);
    email: string;
    email_verified: (string | null);
    password: (string | null);
    created_at: string;
    updated_at: (string | null);
    is_admin: boolean;
};

export type ChatDisplayStyle = 'whatsapp' | 'list';

export type ChatPredictBody = {
    character_id: string;
    persona_id: string;
    scenario_id: string;
    system_message_id: string;
    messages: Array<ChatPredictMessage>;
};

export type ChatPredictMessage = {
    role: string;
    content: string;
};

export type CreateCharacterParams = {
    name: string;
    display_name: string;
    details: string;
    associated_user_id: (string | null);
    is_public: (boolean | null);
    additional_attributes: (unknown | null);
};

export type CreateChatBody = {
    name: string;
    modelVersion: string;
    characterId: string;
    personaId: string;
    systemMessageId: string;
    scenarioId: string;
    associatedUserId: string;
    settings: unknown;
};

export type CreateChatResponse = {
    chat: AnimusBetaChat;
    generationSettings: AnimusBetaChatGenerationSetting;
    uiSettings: AnimusBetaChatUiSetting;
};

export type CreatePersonasBody = {
    name: string;
    details: (string | null);
    associatedUserId: string;
    isPublic: boolean;
};

export type CreateScenarioBody = {
    name: string;
    content: string;
    associatedUserId: string;
    isPublic: boolean;
};

export type CreateSystemMessageBody = {
    name: string;
    content: string;
    associatedUserId: (string | null);
    isPublic: boolean;
};

export type DetailedChatPredictBody = {
    modelVersion: string;
    systemMessageContent: string;
    personaName: string;
    personaDetails: string;
    characterName: string;
    characterDetails: string;
    characterAdditionalAttributes: {
        [key: string]: unknown;
    };
    scenarioContent: string;
    messages: Array<ChatPredictMessage>;
};

export type GetExpandedChatInfoResponse = {
    chat: AnimusBetaChat;
    character: AnimusBetaCharacter;
    persona: AnimusBetaPersona;
    scenario: AnimusBetaScenario;
    systemMessage: AnimusBetaSystemMessage;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type LoginBody = {
    email: string;
    password: string;
};

export type SignupUser = {
    name: string;
    username: string;
    email: string;
    plainTextPassword: string;
};

export type UpdateChatGenerationSettingsParams = {
    model_version: (string | null);
    chat_prediction_count: (number | null);
    temperature: (number | string | null);
    top_p: (number | string | null);
    top_k: (number | null);
    max_tokens: (number | null);
    repeat_penalty: (number | string | null);
};

export type UpdateChatUISettingsBody = {
    displayStyle: (ChatDisplayStyle | null);
    showNames: (boolean | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type LoginUserData = {
    body: LoginBody;
};

export type LoginUserResponse = (AnimusBetaUser);

export type LoginUserError = (HTTPValidationError);

export type SignupNormieUserData = {
    body: SignupUser;
};

export type SignupNormieUserResponse = (AnimusBetaUser);

export type SignupNormieUserError = (HTTPValidationError);

export type SignupAdminUserData = {
    body: SignupUser;
};

export type SignupAdminUserResponse = (AnimusBetaUser);

export type SignupAdminUserError = (HTTPValidationError);

export type GetAllUsersResponse = (Array<AnimusBetaUser>);

export type GetAllUsersError = unknown;

export type GetUserByEmailData = {
    path: {
        email: string;
    };
};

export type GetUserByEmailResponse = ((AnimusBetaUser | null));

export type GetUserByEmailError = (HTTPValidationError);

export type GetUserByIdData = {
    path: {
        id: string;
    };
};

export type GetUserByIdResponse = ((AnimusBetaUser | null));

export type GetUserByIdError = (HTTPValidationError);

export type CreatePersonaData = {
    body: CreatePersonasBody;
};

export type CreatePersonaResponse = (AnimusBetaPersona);

export type CreatePersonaError = (HTTPValidationError);

export type GetPersonasForUserData = {
    path: {
        user_id: string;
    };
};

export type GetPersonasForUserResponse = (Array<AnimusBetaPersona>);

export type GetPersonasForUserError = (HTTPValidationError);

export type GetPublicSystemMessagesResponse = (Array<AnimusBetaSystemMessage>);

export type GetPublicSystemMessagesError = unknown;

export type GetSystemMessagesForUserData = {
    path: {
        user_id: string;
    };
};

export type GetSystemMessagesForUserResponse = (Array<AnimusBetaSystemMessage>);

export type GetSystemMessagesForUserError = (HTTPValidationError);

export type CreateSystemMessageData = {
    body: CreateSystemMessageBody;
};

export type CreateSystemMessageResponse = (AnimusBetaSystemMessage);

export type CreateSystemMessageError = (HTTPValidationError);

export type CreateCharacterData = {
    body: CreateCharacterParams;
};

export type CreateCharacterResponse = (AnimusBetaCharacter);

export type CreateCharacterError = (HTTPValidationError);

export type GetCharactersForUserData = {
    path: {
        user_id: string;
    };
};

export type GetCharactersForUserResponse = (Array<AnimusBetaCharacter>);

export type GetCharactersForUserError = (HTTPValidationError);

export type ChatPredictData = {
    body: ChatPredictBody;
};

export type ChatPredictResponse = (unknown);

export type ChatPredictError = (HTTPValidationError);

export type OllamaDetailedChatPredictData = {
    body: DetailedChatPredictBody;
};

export type OllamaDetailedChatPredictResponse = (unknown);

export type OllamaDetailedChatPredictError = (HTTPValidationError);

export type CreateScenarioData = {
    body: CreateScenarioBody;
};

export type CreateScenarioResponse = (AnimusBetaScenario);

export type CreateScenarioError = (HTTPValidationError);

export type GetScenariosForUserData = {
    path: {
        user_id: string;
    };
};

export type GetScenariosForUserResponse = (Array<AnimusBetaScenario>);

export type GetScenariosForUserError = (HTTPValidationError);

export type GetChatData = {
    path: {
        chat_id: string;
    };
};

export type GetChatResponse = (GetExpandedChatInfoResponse);

export type GetChatError = (HTTPValidationError);

export type CreateChatData = {
    body: CreateChatBody;
};

export type CreateChatResponse2 = (CreateChatResponse);

export type CreateChatError = (HTTPValidationError);

export type GetChatsForUserData = {
    path: {
        user_id: string;
    };
};

export type GetChatsForUserResponse = (Array<AnimusBetaChat>);

export type GetChatsForUserError = (HTTPValidationError);

export type GetChatGenerationSettingsData = {
    path: {
        chat_id: string;
    };
};

export type GetChatGenerationSettingsResponse = (AnimusBetaChatGenerationSetting);

export type GetChatGenerationSettingsError = (HTTPValidationError);

export type UpdateChatGenerationSettingsData = {
    body: UpdateChatGenerationSettingsParams;
};

export type UpdateChatGenerationSettingsResponse = (AnimusBetaChatGenerationSetting);

export type UpdateChatGenerationSettingsError = (HTTPValidationError);

export type GetChatUiSettingsData = {
    path: {
        chat_id: string;
    };
};

export type GetChatUiSettingsResponse = (AnimusBetaChatUiSetting);

export type GetChatUiSettingsError = (HTTPValidationError);

export type UpdateChatUiSettingsData = {
    body: UpdateChatUISettingsBody;
};

export type UpdateChatUiSettingsResponse = (AnimusBetaChatUiSetting);

export type UpdateChatUiSettingsError = (HTTPValidationError);